{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","undefined","keyboardListener","event","setState","code","key","window","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,aAASC,GAFb,EAaEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZJ,QAAwB,UAAfG,EAAME,KACX,QACAF,EAAMG,OAjBhB,uDAKE,WACEC,OAAOC,iBAAiB,QAASC,KAAKP,oBAN1C,kCASE,WACEK,OAAOG,oBAAoB,QAASD,KAAKP,oBAV7C,oBAqBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKV,MAAMC,QAAX,kCAC8BS,KAAKV,MAAMC,SACtC,kCA3Bd,GAAyBY,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bc0bd959.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressed: string | undefined,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressed: undefined,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.keyboardListener);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.keyboardListener);\n  }\n\n  keyboardListener = (event: KeyboardEvent) => {\n    this.setState({\n      pressed: event.code === 'Space'\n        ? 'Space'\n        : event.key,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressed\n            ? `The last pressed key is ${this.state.pressed}`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}